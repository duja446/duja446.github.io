<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>advent of code 2022 on Duja446 Blog</title><link>https://duja446.github.io/tags/advent-of-code-2022/</link><description>Recent content in advent of code 2022 on Duja446 Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 Dec 2022 15:07:29 +0100</lastBuildDate><atom:link href="https://duja446.github.io/tags/advent-of-code-2022/index.xml" rel="self" type="application/rss+xml"/><item><title>Advent of Code 2022 - Day 01</title><link>https://duja446.github.io/posts/2022-12-19-advent-of-code-day-01/</link><pubDate>Mon, 19 Dec 2022 15:07:29 +0100</pubDate><guid>https://duja446.github.io/posts/2022-12-19-advent-of-code-day-01/</guid><description>Day 01 This problem boils down to being able to parse the input and being able to sum the total calories for each elf. For the parsing I used regex to first get all the calories of one elf with regex \n *\n * which maches anything between two newline characters. Then to convert paragraphs to lines I matched a newline character with any number of whitespaces.
1(defn paragraph-lines 2 &amp;#34;Splits s intro paragraphs and paragraphs to lines&amp;#34; 3 [s] 4 (map (#(string/split % #&amp;#34;\n *&amp;#34;)) (string/split s #&amp;#34;\n *\n *&amp;#34;))) Next I needed to sum calories of one elf which is just parsing and summing all the values from one row.</description></item></channel></rss>